<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jdkstack</groupId>
    <artifactId>mini</artifactId>
    <version>11</version>
    <packaging>pom</packaging>
    <modules>
        <module>mini-api</module>
        <module>mini-core</module>
        <module>mini-extension</module>
    </modules>
    <properties>
        <!--  源文件使用的编码. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--  插件使用的编码. -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译时使用的编码.-->
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <!-- 源文件编译时用的版本. -->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <!-- 编译级别. -->
        <maven.compiler.compilerVersion>11</maven.compiler.compilerVersion>
    </properties>
    <build>
        <plugins>
            <plugin>
                <!-- Resources插件处理将项目资源复制到输出目录的问题-->
                <artifactId>maven-resources-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.3.1</version>
            </plugin>
            <plugin>
                <!-- 编译-->
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerVersion>${maven.compiler.compilerVersion}</compilerVersion>
                    <encoding>UTF-8</encoding>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgs>
                        <arg>--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</arg>
                        <arg>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.11.0</version>
            </plugin>
            <plugin>
                <!-- 打包-->
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                </configuration>
                <!-- https://maven.apache.org/plugins/maven-jar-plugin/examples/include-exclude.html-->
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.3.0</version>
            </plugin>
            <plugin>
                <!-- 测试-->
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
                <!-- 编译跳过测试用例 mvn install -DskipTests 或者 mvn install -Dmaven.test.skip=true-->
                <!-- 参考 http://maven.apache.org/surefire/maven-surefire-plugin/examples/skipping-test.html-->
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.1.2</version>
            </plugin>
            <plugin>
                <!-- 代码样式检测. -->
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <!-- 官方规范地址: https://checkstyle.org/ -->
                    <!-- 使用google规范. -->
                    <configLocation>style/checkstyle/google/google_checks.xml</configLocation>
                    <!--使用sun规范.
                      <configLocation>checkstyle/sun/sun_checks.xml</configLocation>
                    -->
                    <failOnViolation>true</failOnViolation>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <!-- 是否对test目录中的代码进行检查-->
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <!-- 解决这个问题: Unable to locate Source XRef to link to - DISABLED. -->
                    <linkXRef>false</linkXRef>
                    <!-- 检测结果输出到控制台-->
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <!-- -->
                    <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
                    <suppressionsLocation>style/checkstyle/google/checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- 使用指定版本的checkstyle. -->
                        <artifactId>checkstyle</artifactId>
                        <groupId>com.puppycrawl.tools</groupId>
                        <version>10.12.4</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <!-- 执行哪些步骤-->
                            <!-- 只检测,并统计总的问题数量,不会停止编译打包. -->
                            <!-- check 会停止编译打包. -->
                            <goal>checkstyle</goal>
                        </goals>
                        <!-- 随便一个名字-->
                        <id>validate</id>
                        <!-- 与maven的生命周期的某个阶段绑定,与maven验证阶段一起执行代码样式检查. -->
                        <phase>validate</phase>
                    </execution>
                </executions>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.3.0</version>
            </plugin>
        </plugins>
    </build>
</project>